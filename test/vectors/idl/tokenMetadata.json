{
  "kind": "rootNode",
  "standard": "codama",
  "version": "1.2.13",
  "program": {
    "kind": "programNode",
    "name": "tokenMetadata",
    "publicKey": "metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s",
    "version": "1.14.0",
    "origin": "shank",
    "docs": [],
    "accounts": [
      {
        "kind": "accountNode",
        "name": "collectionAuthorityRecord",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "bump",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "updateAuthority",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "publicKeyTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "metadataDelegateRecord",
        "size": 98,
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "bump",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "mint",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "delegate",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "updateAuthority",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "holderDelegateRecord",
        "size": 98,
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "bump",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "mint",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "delegate",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "updateAuthority",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "edition",
        "size": 41,
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "parent",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "edition",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "editionMarker",
        "size": 32,
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "ledger",
              "docs": [],
              "type": {
                "kind": "fixedSizeTypeNode",
                "size": 31,
                "type": {
                  "kind": "bytesTypeNode"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "editionMarkerV2",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "ledger",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "bytesTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "tokenOwnedEscrow",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "baseToken",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "authority",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "escrowAuthority"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "bump",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "masterEditionV2",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "supply",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "maxSupply",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u64",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "masterEditionV1",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "supply",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "maxSupply",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u64",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "printingMint",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "oneTimePrintingAuthorizationMint",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "metadata",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "updateAuthority",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "mint",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "data",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "data"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "primarySaleHappened",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isMutable",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "editionNonce",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "tokenStandard",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "tokenStandard"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collection",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "collection"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uses",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "uses"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collectionDetails",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "collectionDetails"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "programmableConfig",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "programmableConfig"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "tokenRecord",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "bump",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "state",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "tokenState"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "ruleSetRevision",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u64",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "delegate",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "publicKeyTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "delegateRole",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "tokenDelegateRole"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "lockedTransfer",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "publicKeyTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "reservationListV2",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "masterEdition",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "supplySnapshot",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u64",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "reservations",
              "docs": [],
              "type": {
                "kind": "arrayTypeNode",
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "reservation"
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "totalReservationSpots",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "currentReservationSpots",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "reservationListV1",
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "masterEdition",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "supplySnapshot",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "numberTypeNode",
                  "format": "u64",
                  "endian": "le"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "reservations",
              "docs": [],
              "type": {
                "kind": "arrayTypeNode",
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "reservationV1"
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "kind": "accountNode",
        "name": "useAuthorityRecord",
        "size": 10,
        "docs": [],
        "data": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "key"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "allowedUses",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "bump",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          ]
        }
      }
    ],
    "instructions": [
      {
        "kind": "instructionNode",
        "name": "createMetadataAccount",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "update authority info"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent info"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 0
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "updateMetadataAccount",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority key"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 1
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "deprecatedCreateMasterEdition",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Unallocated edition V1 account with address as pda of ['metadata', program id, mint, 'edition']"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printingMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Printing mint - A mint you control that can mint tokens that can be exchanged for limited editions of your master edition via the MintNewEditionFromMasterEditionViaToken endpoint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "oneTimePrintingAuthorizationMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "One time authorization printing mint - A mint you control that prints tokens that gives the bearer permission to mint any number of tokens from the printing mint one time via an endpoint with the token-metadata program for your metadata. Also burns the token."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Current Update authority key"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printingMintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Printing mint authority - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority on the metadata's mint - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent info"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "oneTimePrintingAuthorizationMintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "One time authorization printing mint authority - must be provided if using max supply. THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY."
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 2
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "deprecatedMintNewEditionFromMasterEditionViaPrintingToken",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Edition V1 (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Record Edition V1 (pda of ['metadata', program id, master metadata mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority of new mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printingMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Printing Mint of master record edition"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterTokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account containing Printing mint token to be transferred"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMarker",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master mint id, edition_number])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "burnAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Burn authority for this token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterUpdateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "update authority info for new metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterMetadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master record metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent info"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "reservationList",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Reservation List - If present, and you are on this list, you can get an edition number given by your position on the list."
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 3
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "updatePrimarySaleHappenedViaToken",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "owner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Owner on the token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Account containing tokens from the metadata's mint"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 4
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "deprecatedSetReservationList",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "reservationList",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "PDA for ReservationList of ['metadata', program id, master edition key, 'reservation', resource-key]"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "resource",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "The resource you tied the reservation list too"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 5
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "deprecatedCreateReservationList",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "reservationList",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "PDA for ReservationList of ['metadata', program id, master edition key, 'reservation', resource-key]"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              " Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "resource",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "A resource you wish to tie the reservation list to. This is so your later visitors who come to redeem can derive your reservation list PDA with something they can easily get at. You choose what this should be."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent info"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 6
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "signMetadata",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "creator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Creator"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 7
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "deprecatedMintPrintingTokensViaToken",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "destination",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Destination account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account containing one time authorization token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "oneTimePrintingAuthorizationMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "One time authorization mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printingMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Printing mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "burnAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Burn authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 8
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "deprecatedMintPrintingTokens",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "destination",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Destination account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printingMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Printing mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Edition V1 key (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 9
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createMasterEdition",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Unallocated edition V2 account with address as pda of ['metadata', program id, mint, 'edition']"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority on the metadata's mint - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent info"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 10
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "mintNewEditionFromMasterEditionViaToken",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "newMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Edition (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMarkPda",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE)."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newMintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority of new mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccountOwner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "owner of token account containing master token (#8)"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "token account containing token from master metadata mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newMetadataUpdateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Update authority info for new metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master record metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 11
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "mintNewEditionFromMasterEditionViaTokenArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "mintNewEditionFromMasterEditionViaTokenArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "convertMasterEditionV1ToV2",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Record Edition V1 (pda of ['metadata', program id, master metadata mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "oneTimeAuth",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "One time authorization mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printingMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Printing mint"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 12
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "mintNewEditionFromMasterEditionViaVaultProxy",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "newMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Edition (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition']"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMarkPda",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE)."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newMintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority of new mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "vaultAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Vault authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "safetyDepositStore",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Safety deposit token store account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "safetyDepositBox",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Safety deposit box"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "vault",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Vault"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newMetadataUpdateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Update authority info for new metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master record metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenVaultProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token vault program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 13
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "mintNewEditionFromMasterEditionViaTokenArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "mintNewEditionFromMasterEditionViaTokenArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "puffMetadata",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 14
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "updateMetadataAccountV2",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority key"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 15
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "data",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "definedTypeLinkNode",
                "name": "dataV2"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "updateAuthority",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "publicKeyTypeNode"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "primarySaleHappened",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "isMutable",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createMetadataAccountV2",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "update authority info"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 16
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createMasterEditionV3",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Unallocated edition V2 account with address as pda of ['metadata', program id, mint, 'edition']"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority on the metadata's mint - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 17
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "maxSupply",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "verifyCollection",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEditionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 18
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "utilize",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token Account Of NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "useAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "A Use Authority / Can be the current Owner of the NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "owner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "ataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Associated Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
              "identifier": "splAssociatedToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Rent info"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "SysvarRent111111111111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "useAuthorityRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Use Authority Record PDA If present the program Assumes a delegated use authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "burner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Program As Signer (Burner)"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 19
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "numberOfUses",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "approveUseAuthority",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "useAuthorityRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Use Authority Record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "owner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "user",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "A Use Authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "ownerTokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Owned Token Account Of Mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of Metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "burner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Program As Signer (Burner)"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 20
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "numberOfUses",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "revokeUseAuthority",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "useAuthorityRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Use Authority Record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "owner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "user",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "A Use Authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "ownerTokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Owned Token Account Of Mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of Metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 21
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unverifyCollection",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEditionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 22
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "approveCollectionAuthority",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Collection Authority Record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "newCollectionAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "A Collection Authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update Authority of Collection NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Collection Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of Collection Metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 23
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "revokeCollectionAuthority",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Collection Authority Record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateAuthority",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Delegated Collection Authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "revokeAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update Authority, or Delegated Authority, of Collection NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of Metadata"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 24
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setAndVerifyCollection",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Update Authority of Collection NFT and NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collection",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEditionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 25
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "freezeDelegatedAccount",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "delegate",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Delegate"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account to freeze"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 26
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "thawDelegatedAccount",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "delegate",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Delegate"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account to thaw"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 27
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "removeCreatorVerification",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "creator",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Creator"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 28
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "burnNft",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "owner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "NFT owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account to close"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEditionAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 of the NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Metadata of the Collection"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 29
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "verifySizedCollectionItem",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEditionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 30
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unverifySizedCollectionItem",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEditionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 31
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setAndVerifySizedCollectionItem",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Update Authority of Collection NFT and NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collection",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEditionAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 32
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createMetadataAccountV3",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": "either",
            "isOptional": false,
            "docs": [
              "update authority info"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "rent",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Rent info"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 33
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "data",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "dataV2"
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "isMutable",
            "docs": [],
            "type": {
              "kind": "booleanTypeNode",
              "size": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "collectionDetails",
            "docs": [],
            "type": {
              "kind": "optionTypeNode",
              "fixed": false,
              "item": {
                "kind": "definedTypeLinkNode",
                "name": "collectionDetails"
              },
              "prefix": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setCollectionSize",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Collection Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 34
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "setCollectionSizeArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "setCollectionSizeArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "setTokenStandard",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Metadata update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 35
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "bubblegumSetCollectionSize",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Collection Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Collection Update authority"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "bubblegumSigner",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Signing PDA of Bubblegum program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionAuthorityRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Collection Authority Record PDA"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 36
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "setCollectionSizeArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "setCollectionSizeArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "burnEditionNft",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "owner",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "NFT owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printEditionMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the print edition NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEditionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of the original/master NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printEditionTokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account the print edition NFT is in"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEditionTokenAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account the Master Edition NFT is in"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEditionAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "MasterEdition2 of the original NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "printEditionAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Print Edition account of the NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMarkerAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition Marker PDA of the NFT"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 37
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "createEscrowAccount",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "escrow",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Escrow account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account of the token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Wallet paying for the transaction and new account"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Authority/creator of the escrow account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 38
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "closeEscrowAccount",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "escrow",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Escrow account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Wallet paying for the transaction and new account"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 39
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "transferOutOfEscrow",
        "docs": [],
        "optionalAccountStrategy": "omitted",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "escrow",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Escrow account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Wallet paying for the transaction and new account"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "attributeMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account for the new attribute"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "attributeSrc",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account source for the new attribute"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "attributeDst",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account, owned by TM, destination for the new attribute"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "escrowMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account that the escrow is attached"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "escrowAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account that holds the token the escrow is attached to"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "ataProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Associated Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
              "identifier": "splAssociatedToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Authority/creator of the escrow account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 40
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "amount",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u64",
              "endian": "le"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "burn",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Asset owner or Utility delegate"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Metadata of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition of the asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account to close"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEditionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master edition mint of the asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEditionToken",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master edition token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMarker",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition marker account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 41
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "burnArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "burnArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "create",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Unallocated metadata account with address as pda of ['metadata', program id, mint id]"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Unallocated edition account with address as pda of ['metadata', program id, mint, 'edition']"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Update authority for the metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "SPL Token program"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 42
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "createArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "createArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "mint",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token or Associated Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Owner of the token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "(Mint or Update) authority"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Metadata delegate record"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splAtaProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Associated Token Account program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
              "identifier": "splAssociatedToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 43
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "mintArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "mintArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "delegate",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Delegate record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Owner of the delegated account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token account of mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority or token owner"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "SPL Token Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 44
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "delegateArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "delegateArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "revoke",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Delegate record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegate",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Owner of the delegated account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of metadata"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token account of mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority or token owner"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "SPL Token Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 45
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "revokeArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "revokeArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "lock",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Delegate or freeze authority"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token owner account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "SPL Token Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 46
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "lockArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "lockArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unlock",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Delegate or freeze authority"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token owner account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "SPL Token Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 47
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "unlockArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "unlockArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "migrate",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Collection metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Delegate record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instruction sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 48
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "transfer",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "tokenOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "destination",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Destination token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "destinationOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Destination token account owner"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "ownerTokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Owner token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "destinationTokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Destination token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Transfer authority (token owner or delegate)"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Token Program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splAtaProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Associated Token Account program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
              "identifier": "splAssociatedToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 49
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "transferArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "transferArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "update",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Update authority or delegate"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Delegate record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 50
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "updateArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "updateArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "use",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Token owner or delegate"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Delegate record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Edition account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "SPL Token Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRulesProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules Program"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authorizationRules",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token Authorization Rules account"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 51
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "useArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "useArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "verify",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Creator to verify, collection update authority or delegate"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Delegate record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMasterEdition",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Master Edition Account of the Collection Token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 52
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "verificationArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "verificationArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "unverify",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Creator to verify, collection (or metadata if parent burned) update authority or delegate"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "delegateRecord",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Delegate record PDA"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Mint of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "collectionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Metadata Account of the Collection"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 53
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "verificationArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "verificationArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "collect",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Authority to collect fees"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "recipient",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "The account to transfer collected fees to"
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 54
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "print",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "editionMetadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Metadata key (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "New Edition (pda of ['metadata', program id, mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionTokenAccountOwner",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Owner of the token account of new token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionTokenAccount",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token account of new token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMintAuthority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Mint authority of new mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionTokenRecord",
            "isWritable": true,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token record account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterEdition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition'])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "editionMarkerPda",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE)."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "payer"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterTokenAccountOwner",
            "isWritable": false,
            "isSigner": "either",
            "isOptional": false,
            "docs": [
              "owner of token account containing master token"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterTokenAccount",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "token account containing token from master metadata mint"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "masterMetadata",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Master record metadata account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "updateAuthority",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "The update authority of the master edition."
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "splTokenProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Token program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
              "identifier": "splToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "splAtaProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "SPL Associated Token Account program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
              "identifier": "splAssociatedToken"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "sysvarInstructions",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Instructions sysvar account"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "Sysvar1nstructions1111111111111111111111111"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 55
            }
          },
          {
            "kind": "instructionArgumentNode",
            "name": "printArgs",
            "docs": [],
            "type": {
              "kind": "definedTypeLinkNode",
              "name": "printArgs"
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "resize",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "The metadata account of the digital asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "The master edition or edition account of the digital asset, an uninitialized account for fungible assets"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "payer",
            "isWritable": true,
            "isSigner": "either",
            "isOptional": false,
            "docs": [
              "The recipient of the excess rent and authority if the authority account is not present"
            ],
            "defaultValue": {
              "kind": "payerValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": true,
            "docs": [
              "Owner of the asset for (p)NFTs, or mint authority for fungible assets, if different from the payer"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "token",
            "isWritable": false,
            "isSigner": false,
            "isOptional": true,
            "docs": [
              "Token or Associated Token account"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "systemProgram",
            "isWritable": false,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "System program"
            ],
            "defaultValue": {
              "kind": "publicKeyValueNode",
              "publicKey": "11111111111111111111111111111111",
              "identifier": "splSystem"
            }
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 56
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      },
      {
        "kind": "instructionNode",
        "name": "closeAccounts",
        "docs": [],
        "optionalAccountStrategy": "programId",
        "accounts": [
          {
            "kind": "instructionAccountNode",
            "name": "metadata",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Metadata (pda of ['metadata', program id, mint id])"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "edition",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Edition of the asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "mint",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "Mint of token asset"
            ]
          },
          {
            "kind": "instructionAccountNode",
            "name": "authority",
            "isWritable": false,
            "isSigner": true,
            "isOptional": false,
            "docs": [
              "Authority to close ownerless accounts"
            ],
            "defaultValue": {
              "kind": "identityValueNode"
            }
          },
          {
            "kind": "instructionAccountNode",
            "name": "destination",
            "isWritable": true,
            "isSigner": false,
            "isOptional": false,
            "docs": [
              "The destination account that will receive the rent."
            ]
          }
        ],
        "arguments": [
          {
            "kind": "instructionArgumentNode",
            "name": "discriminator",
            "defaultValueStrategy": "omitted",
            "docs": [],
            "type": {
              "kind": "numberTypeNode",
              "format": "u8",
              "endian": "le"
            },
            "defaultValue": {
              "kind": "numberValueNode",
              "number": 57
            }
          }
        ],
        "discriminators": [
          {
            "kind": "fieldDiscriminatorNode",
            "name": "discriminator",
            "offset": 0
          }
        ]
      }
    ],
    "definedTypes": [
      {
        "kind": "definedTypeNode",
        "name": "setCollectionSizeArgs",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "size",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "mintNewEditionFromMasterEditionViaTokenArgs",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "edition",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "authorizationData",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "payload",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "payload"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "assetData",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "name",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "symbol",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uri",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "sellerFeeBasisPoints",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u16",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "creators",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "arrayTypeNode",
                  "item": {
                    "kind": "definedTypeLinkNode",
                    "name": "creator"
                  },
                  "count": {
                    "kind": "prefixedCountNode",
                    "prefix": {
                      "kind": "numberTypeNode",
                      "format": "u32",
                      "endian": "le"
                    }
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "primarySaleHappened",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "isMutable",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "tokenStandard",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "tokenStandard"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collection",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "collection"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uses",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "uses"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collectionDetails",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "collectionDetails"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "ruleSet",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "publicKeyTypeNode"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "collection",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "verified",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "key",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "creator",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "address",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "verified",
              "docs": [],
              "type": {
                "kind": "booleanTypeNode",
                "size": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "share",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "data",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "name",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "symbol",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uri",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "sellerFeeBasisPoints",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u16",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "creators",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "arrayTypeNode",
                  "item": {
                    "kind": "definedTypeLinkNode",
                    "name": "creator"
                  },
                  "count": {
                    "kind": "prefixedCountNode",
                    "prefix": {
                      "kind": "numberTypeNode",
                      "format": "u32",
                      "endian": "le"
                    }
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "dataV2",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "name",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "symbol",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uri",
              "docs": [],
              "type": {
                "kind": "sizePrefixTypeNode",
                "type": {
                  "kind": "stringTypeNode",
                  "encoding": "utf8"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u32",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "sellerFeeBasisPoints",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u16",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "creators",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "arrayTypeNode",
                  "item": {
                    "kind": "definedTypeLinkNode",
                    "name": "creator"
                  },
                  "count": {
                    "kind": "prefixedCountNode",
                    "prefix": {
                      "kind": "numberTypeNode",
                      "format": "u32",
                      "endian": "le"
                    }
                  }
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "collection",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "collection"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "uses",
              "docs": [],
              "type": {
                "kind": "optionTypeNode",
                "fixed": false,
                "item": {
                  "kind": "definedTypeLinkNode",
                  "name": "uses"
                },
                "prefix": {
                  "kind": "numberTypeNode",
                  "format": "u8",
                  "endian": "le"
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "reservation",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "address",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "spotsRemaining",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "totalSpots",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "reservationV1",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "address",
              "docs": [],
              "type": {
                "kind": "publicKeyTypeNode"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "spotsRemaining",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "totalSpots",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u8",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "seedsVec",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "seeds",
              "docs": [],
              "type": {
                "kind": "arrayTypeNode",
                "item": {
                  "kind": "sizePrefixTypeNode",
                  "type": {
                    "kind": "bytesTypeNode"
                  },
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "proofInfo",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "proof",
              "docs": [],
              "type": {
                "kind": "arrayTypeNode",
                "item": {
                  "kind": "fixedSizeTypeNode",
                  "size": 32,
                  "type": {
                    "kind": "bytesTypeNode"
                  }
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "payload",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "map",
              "docs": [],
              "type": {
                "kind": "mapTypeNode",
                "key": {
                  "kind": "sizePrefixTypeNode",
                  "type": {
                    "kind": "stringTypeNode",
                    "encoding": "utf8"
                  },
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                },
                "value": {
                  "kind": "definedTypeLinkNode",
                  "name": "payloadType"
                },
                "count": {
                  "kind": "prefixedCountNode",
                  "prefix": {
                    "kind": "numberTypeNode",
                    "format": "u32",
                    "endian": "le"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "uses",
        "docs": [],
        "type": {
          "kind": "structTypeNode",
          "fields": [
            {
              "kind": "structFieldTypeNode",
              "name": "useMethod",
              "docs": [],
              "type": {
                "kind": "definedTypeLinkNode",
                "name": "useMethod"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "remaining",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            },
            {
              "kind": "structFieldTypeNode",
              "name": "total",
              "docs": [],
              "type": {
                "kind": "numberTypeNode",
                "format": "u64",
                "endian": "le"
              }
            }
          ]
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "burnArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "delegateArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "collectionV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "saleV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "transferV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "dataV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "utilityV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "stakingV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "standardV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "lockedTransferV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "lockedAddress",
                    "docs": [],
                    "type": {
                      "kind": "publicKeyTypeNode"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "programmableConfigV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "authorityItemV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "dataItemV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "collectionItemV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "programmableConfigItemV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "printDelegateV1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "revokeArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectionV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "saleV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "transferV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "dataV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "utilityV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "stakingV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "standardV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "lockedTransferV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableConfigV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "migrationV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "authorityItemV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "dataItemV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectionItemV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableConfigItemV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "printDelegateV1"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "metadataDelegateRole",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "authorityItem"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collection"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "use"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "data"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableConfig"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "dataItem"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectionItem"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableConfigItem"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "holderDelegateRole",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "printDelegate"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "createArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "assetData",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "assetData"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "decimals",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "printSupply",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "printSupply"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "mintArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "transferArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "amount",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "updateArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "newUpdateAuthority",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "publicKeyTypeNode"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "data",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "data"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "primarySaleHappened",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "booleanTypeNode",
                        "size": {
                          "kind": "numberTypeNode",
                          "format": "u8",
                          "endian": "le"
                        }
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "isMutable",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "booleanTypeNode",
                        "size": {
                          "kind": "numberTypeNode",
                          "format": "u8",
                          "endian": "le"
                        }
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collection",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "collectionToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collectionDetails",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "collectionDetailsToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "uses",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "usesToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "ruleSet",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "ruleSetToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asUpdateAuthorityV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "newUpdateAuthority",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "publicKeyTypeNode"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "data",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "data"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "primarySaleHappened",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "booleanTypeNode",
                        "size": {
                          "kind": "numberTypeNode",
                          "format": "u8",
                          "endian": "le"
                        }
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "isMutable",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "booleanTypeNode",
                        "size": {
                          "kind": "numberTypeNode",
                          "format": "u8",
                          "endian": "le"
                        }
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collection",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "collectionToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collectionDetails",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "collectionDetailsToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "uses",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "usesToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "ruleSet",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "ruleSetToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "tokenStandard",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "tokenStandard"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asAuthorityItemDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "newUpdateAuthority",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "publicKeyTypeNode"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "primarySaleHappened",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "booleanTypeNode",
                        "size": {
                          "kind": "numberTypeNode",
                          "format": "u8",
                          "endian": "le"
                        }
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "isMutable",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "booleanTypeNode",
                        "size": {
                          "kind": "numberTypeNode",
                          "format": "u8",
                          "endian": "le"
                        }
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "tokenStandard",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "tokenStandard"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asCollectionDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collection",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "collectionToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asDataDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "data",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "data"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asProgrammableConfigDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "ruleSet",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "ruleSetToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asDataItemDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "data",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "data"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asCollectionItemDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "collection",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "collectionToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "asProgrammableConfigItemDelegateV2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "ruleSet",
                    "docs": [],
                    "type": {
                      "kind": "definedTypeLinkNode",
                      "name": "ruleSetToggle"
                    }
                  },
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "collectionToggle",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "clear"
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "set",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "definedTypeLinkNode",
                    "name": "collection"
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "usesToggle",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "clear"
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "set",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "definedTypeLinkNode",
                    "name": "uses"
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "collectionDetailsToggle",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "clear"
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "set",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "definedTypeLinkNode",
                    "name": "collectionDetails"
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "ruleSetToggle",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "clear"
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "set",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "publicKeyTypeNode"
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "printArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "edition",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "edition",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "lockArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "unlockArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "useArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "authorizationData",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "definedTypeLinkNode",
                        "name": "authorizationData"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "verificationArgs",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "creatorV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectionV1"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "tokenStandard",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "nonFungible"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "fungibleAsset"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "fungible"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "nonFungibleEdition"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableNonFungible"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableNonFungibleEdition"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "key",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "uninitialized"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "editionV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "masterEditionV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "reservationListV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "metadataV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "reservationListV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "masterEditionV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "editionMarker"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "useAuthorityRecord"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectionAuthorityRecord"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "tokenOwnedEscrow"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "tokenRecord"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "metadataDelegate"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "editionMarkerV2"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "holderDelegate"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "collectionDetails",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "size",
                    "docs": [],
                    "type": {
                      "kind": "numberTypeNode",
                      "format": "u64",
                      "endian": "le"
                    }
                  }
                ]
              }
            },
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v2",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "padding",
                    "docs": [],
                    "type": {
                      "kind": "fixedSizeTypeNode",
                      "size": 8,
                      "type": {
                        "kind": "bytesTypeNode"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "escrowAuthority",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "tokenOwner"
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "creator",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "publicKeyTypeNode"
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "printSupply",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "zero"
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "limited",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "numberTypeNode",
                    "format": "u64",
                    "endian": "le"
                  }
                ]
              }
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "unlimited"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "programmableConfig",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumStructVariantTypeNode",
              "name": "v1",
              "struct": {
                "kind": "structTypeNode",
                "fields": [
                  {
                    "kind": "structFieldTypeNode",
                    "name": "ruleSet",
                    "docs": [],
                    "type": {
                      "kind": "optionTypeNode",
                      "fixed": false,
                      "item": {
                        "kind": "publicKeyTypeNode"
                      },
                      "prefix": {
                        "kind": "numberTypeNode",
                        "format": "u8",
                        "endian": "le"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "migrationType",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "collectionV1"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "programmableV1"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "tokenState",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "unlocked"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "locked"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "listed"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "tokenDelegateRole",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "sale"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "transfer"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "utility"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "staking"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "standard"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "lockedTransfer"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "migration"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "authorityType",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "none"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "metadata"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "holder"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "metadataDelegate"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "tokenDelegate"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "payloadKey",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "amount"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "authority"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "authoritySeeds"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "delegate"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "delegateSeeds"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "destination"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "destinationSeeds"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "holder"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "source"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "sourceSeeds"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "payloadType",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "pubkey",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "publicKeyTypeNode"
                  }
                ]
              }
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "seeds",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "definedTypeLinkNode",
                    "name": "seedsVec"
                  }
                ]
              }
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "merkleProof",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "definedTypeLinkNode",
                    "name": "proofInfo"
                  }
                ]
              }
            },
            {
              "kind": "enumTupleVariantTypeNode",
              "name": "number",
              "tuple": {
                "kind": "tupleTypeNode",
                "items": [
                  {
                    "kind": "numberTypeNode",
                    "format": "u64",
                    "endian": "le"
                  }
                ]
              }
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      },
      {
        "kind": "definedTypeNode",
        "name": "useMethod",
        "docs": [],
        "type": {
          "kind": "enumTypeNode",
          "variants": [
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "burn"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "multiple"
            },
            {
              "kind": "enumEmptyVariantTypeNode",
              "name": "single"
            }
          ],
          "size": {
            "kind": "numberTypeNode",
            "format": "u8",
            "endian": "le"
          }
        }
      }
    ],
    "pdas": [],
    "errors": [
      {
        "kind": "errorNode",
        "name": "instructionUnpackError",
        "code": 0,
        "message": "",
        "docs": [
          "InstructionUnpackError"
        ]
      },
      {
        "kind": "errorNode",
        "name": "instructionPackError",
        "code": 1,
        "message": "",
        "docs": [
          "InstructionPackError"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notRentExempt",
        "code": 2,
        "message": "Lamport balance below rent-exempt threshold",
        "docs": [
          "NotRentExempt: Lamport balance below rent-exempt threshold"
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyInitialized",
        "code": 3,
        "message": "Already initialized",
        "docs": [
          "AlreadyInitialized: Already initialized"
        ]
      },
      {
        "kind": "errorNode",
        "name": "uninitialized",
        "code": 4,
        "message": "Uninitialized",
        "docs": [
          "Uninitialized: Uninitialized"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMetadataKey",
        "code": 5,
        "message": " Metadata's key must match seed of ['metadata', program id, mint] provided",
        "docs": [
          "InvalidMetadataKey:  Metadata's key must match seed of ['metadata', program id, mint] provided"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidEditionKey",
        "code": 6,
        "message": "Edition's key must match seed of ['metadata', program id, name, 'edition'] provided",
        "docs": [
          "InvalidEditionKey: Edition's key must match seed of ['metadata', program id, name, 'edition'] provided"
        ]
      },
      {
        "kind": "errorNode",
        "name": "updateAuthorityIncorrect",
        "code": 7,
        "message": "Update Authority given does not match",
        "docs": [
          "UpdateAuthorityIncorrect: Update Authority given does not match"
        ]
      },
      {
        "kind": "errorNode",
        "name": "updateAuthorityIsNotSigner",
        "code": 8,
        "message": "Update Authority needs to be signer to update metadata",
        "docs": [
          "UpdateAuthorityIsNotSigner: Update Authority needs to be signer to update metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notMintAuthority",
        "code": 9,
        "message": "You must be the mint authority and signer on this transaction",
        "docs": [
          "NotMintAuthority: You must be the mint authority and signer on this transaction"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMintAuthority",
        "code": 10,
        "message": "Mint authority provided does not match the authority on the mint",
        "docs": [
          "InvalidMintAuthority: Mint authority provided does not match the authority on the mint"
        ]
      },
      {
        "kind": "errorNode",
        "name": "nameTooLong",
        "code": 11,
        "message": "Name too long",
        "docs": [
          "NameTooLong: Name too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "symbolTooLong",
        "code": 12,
        "message": "Symbol too long",
        "docs": [
          "SymbolTooLong: Symbol too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "uriTooLong",
        "code": 13,
        "message": "URI too long",
        "docs": [
          "UriTooLong: URI too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "updateAuthorityMustBeEqualToMetadataAuthorityAndSigner",
        "code": 14,
        "message": "",
        "docs": [
          "UpdateAuthorityMustBeEqualToMetadataAuthorityAndSigner"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mintMismatch",
        "code": 15,
        "message": "Mint given does not match mint on Metadata",
        "docs": [
          "MintMismatch: Mint given does not match mint on Metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "editionsMustHaveExactlyOneToken",
        "code": 16,
        "message": "Editions must have exactly one token",
        "docs": [
          "EditionsMustHaveExactlyOneToken: Editions must have exactly one token"
        ]
      },
      {
        "kind": "errorNode",
        "name": "maxEditionsMintedAlready",
        "code": 17,
        "message": "",
        "docs": [
          "MaxEditionsMintedAlready"
        ]
      },
      {
        "kind": "errorNode",
        "name": "tokenMintToFailed",
        "code": 18,
        "message": "",
        "docs": [
          "TokenMintToFailed"
        ]
      },
      {
        "kind": "errorNode",
        "name": "masterRecordMismatch",
        "code": 19,
        "message": "",
        "docs": [
          "MasterRecordMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "destinationMintMismatch",
        "code": 20,
        "message": "",
        "docs": [
          "DestinationMintMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "editionAlreadyMinted",
        "code": 21,
        "message": "",
        "docs": [
          "EditionAlreadyMinted"
        ]
      },
      {
        "kind": "errorNode",
        "name": "printingMintDecimalsShouldBeZero",
        "code": 22,
        "message": "",
        "docs": [
          "PrintingMintDecimalsShouldBeZero"
        ]
      },
      {
        "kind": "errorNode",
        "name": "oneTimePrintingAuthorizationMintDecimalsShouldBeZero",
        "code": 23,
        "message": "",
        "docs": [
          "OneTimePrintingAuthorizationMintDecimalsShouldBeZero"
        ]
      },
      {
        "kind": "errorNode",
        "name": "editionMintDecimalsShouldBeZero",
        "code": 24,
        "message": "EditionMintDecimalsShouldBeZero",
        "docs": [
          "EditionMintDecimalsShouldBeZero: EditionMintDecimalsShouldBeZero"
        ]
      },
      {
        "kind": "errorNode",
        "name": "tokenBurnFailed",
        "code": 25,
        "message": "",
        "docs": [
          "TokenBurnFailed"
        ]
      },
      {
        "kind": "errorNode",
        "name": "tokenAccountOneTimeAuthMintMismatch",
        "code": 26,
        "message": "",
        "docs": [
          "TokenAccountOneTimeAuthMintMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "derivedKeyInvalid",
        "code": 27,
        "message": "Derived key invalid",
        "docs": [
          "DerivedKeyInvalid: Derived key invalid"
        ]
      },
      {
        "kind": "errorNode",
        "name": "printingMintMismatch",
        "code": 28,
        "message": "The Printing mint does not match that on the master edition!",
        "docs": [
          "PrintingMintMismatch: The Printing mint does not match that on the master edition!"
        ]
      },
      {
        "kind": "errorNode",
        "name": "oneTimePrintingAuthMintMismatch",
        "code": 29,
        "message": "The One Time Printing Auth mint does not match that on the master edition!",
        "docs": [
          "OneTimePrintingAuthMintMismatch: The One Time Printing Auth mint does not match that on the master edition!"
        ]
      },
      {
        "kind": "errorNode",
        "name": "tokenAccountMintMismatch",
        "code": 30,
        "message": "The mint of the token account does not match the Printing mint!",
        "docs": [
          "TokenAccountMintMismatch: The mint of the token account does not match the Printing mint!"
        ]
      },
      {
        "kind": "errorNode",
        "name": "tokenAccountMintMismatchV2",
        "code": 31,
        "message": "The mint of the token account does not match the master metadata mint!",
        "docs": [
          "TokenAccountMintMismatchV2: The mint of the token account does not match the master metadata mint!"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notEnoughTokens",
        "code": 32,
        "message": "Not enough tokens to mint a limited edition",
        "docs": [
          "NotEnoughTokens: Not enough tokens to mint a limited edition"
        ]
      },
      {
        "kind": "errorNode",
        "name": "printingMintAuthorizationAccountMismatch",
        "code": 33,
        "message": "",
        "docs": [
          "PrintingMintAuthorizationAccountMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "authorizationTokenAccountOwnerMismatch",
        "code": 34,
        "message": "",
        "docs": [
          "AuthorizationTokenAccountOwnerMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "disabled",
        "code": 35,
        "message": "",
        "docs": [
          "Disabled"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorsTooLong",
        "code": 36,
        "message": "Creators list too long",
        "docs": [
          "CreatorsTooLong: Creators list too long"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorsMustBeAtleastOne",
        "code": 37,
        "message": "Creators must be at least one if set",
        "docs": [
          "CreatorsMustBeAtleastOne: Creators must be at least one if set"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mustBeOneOfCreators",
        "code": 38,
        "message": "",
        "docs": [
          "MustBeOneOfCreators"
        ]
      },
      {
        "kind": "errorNode",
        "name": "noCreatorsPresentOnMetadata",
        "code": 39,
        "message": "This metadata does not have creators",
        "docs": [
          "NoCreatorsPresentOnMetadata: This metadata does not have creators"
        ]
      },
      {
        "kind": "errorNode",
        "name": "creatorNotFound",
        "code": 40,
        "message": "This creator address was not found",
        "docs": [
          "CreatorNotFound: This creator address was not found"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidBasisPoints",
        "code": 41,
        "message": "Basis points cannot be more than 10000",
        "docs": [
          "InvalidBasisPoints: Basis points cannot be more than 10000"
        ]
      },
      {
        "kind": "errorNode",
        "name": "primarySaleCanOnlyBeFlippedToTrue",
        "code": 42,
        "message": "Primary sale can only be flipped to true and is immutable",
        "docs": [
          "PrimarySaleCanOnlyBeFlippedToTrue: Primary sale can only be flipped to true and is immutable"
        ]
      },
      {
        "kind": "errorNode",
        "name": "ownerMismatch",
        "code": 43,
        "message": "Owner does not match that on the account given",
        "docs": [
          "OwnerMismatch: Owner does not match that on the account given"
        ]
      },
      {
        "kind": "errorNode",
        "name": "noBalanceInAccountForAuthorization",
        "code": 44,
        "message": "This account has no tokens to be used for authorization",
        "docs": [
          "NoBalanceInAccountForAuthorization: This account has no tokens to be used for authorization"
        ]
      },
      {
        "kind": "errorNode",
        "name": "shareTotalMustBe100",
        "code": 45,
        "message": "Share total must equal 100 for creator array",
        "docs": [
          "ShareTotalMustBe100: Share total must equal 100 for creator array"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationExists",
        "code": 46,
        "message": "",
        "docs": [
          "ReservationExists"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationDoesNotExist",
        "code": 47,
        "message": "",
        "docs": [
          "ReservationDoesNotExist"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationNotSet",
        "code": 48,
        "message": "",
        "docs": [
          "ReservationNotSet"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationAlreadyMade",
        "code": 49,
        "message": "",
        "docs": [
          "ReservationAlreadyMade"
        ]
      },
      {
        "kind": "errorNode",
        "name": "beyondMaxAddressSize",
        "code": 50,
        "message": "",
        "docs": [
          "BeyondMaxAddressSize"
        ]
      },
      {
        "kind": "errorNode",
        "name": "numericalOverflowError",
        "code": 51,
        "message": "NumericalOverflowError",
        "docs": [
          "NumericalOverflowError: NumericalOverflowError"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationBreachesMaximumSupply",
        "code": 52,
        "message": "",
        "docs": [
          "ReservationBreachesMaximumSupply"
        ]
      },
      {
        "kind": "errorNode",
        "name": "addressNotInReservation",
        "code": 53,
        "message": "",
        "docs": [
          "AddressNotInReservation"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotVerifyAnotherCreator",
        "code": 54,
        "message": "You cannot unilaterally verify another creator, they must sign",
        "docs": [
          "CannotVerifyAnotherCreator: You cannot unilaterally verify another creator, they must sign"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotUnverifyAnotherCreator",
        "code": 55,
        "message": "You cannot unilaterally unverify another creator",
        "docs": [
          "CannotUnverifyAnotherCreator: You cannot unilaterally unverify another creator"
        ]
      },
      {
        "kind": "errorNode",
        "name": "spotMismatch",
        "code": 56,
        "message": "",
        "docs": [
          "SpotMismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "incorrectOwner",
        "code": 57,
        "message": "Incorrect account owner",
        "docs": [
          "IncorrectOwner: Incorrect account owner"
        ]
      },
      {
        "kind": "errorNode",
        "name": "printingWouldBreachMaximumSupply",
        "code": 58,
        "message": "",
        "docs": [
          "PrintingWouldBreachMaximumSupply"
        ]
      },
      {
        "kind": "errorNode",
        "name": "dataIsImmutable",
        "code": 59,
        "message": "Data is immutable",
        "docs": [
          "DataIsImmutable: Data is immutable"
        ]
      },
      {
        "kind": "errorNode",
        "name": "duplicateCreatorAddress",
        "code": 60,
        "message": "No duplicate creator addresses",
        "docs": [
          "DuplicateCreatorAddress: No duplicate creator addresses"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationSpotsRemainingShouldMatchTotalSpotsAtStart",
        "code": 61,
        "message": "",
        "docs": [
          "ReservationSpotsRemainingShouldMatchTotalSpotsAtStart"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidTokenProgram",
        "code": 62,
        "message": "Invalid token program",
        "docs": [
          "InvalidTokenProgram: Invalid token program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "dataTypeMismatch",
        "code": 63,
        "message": "Data type mismatch",
        "docs": [
          "DataTypeMismatch: Data type mismatch"
        ]
      },
      {
        "kind": "errorNode",
        "name": "beyondAlottedAddressSize",
        "code": 64,
        "message": "",
        "docs": [
          "BeyondAlottedAddressSize"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationNotComplete",
        "code": 65,
        "message": "",
        "docs": [
          "ReservationNotComplete"
        ]
      },
      {
        "kind": "errorNode",
        "name": "triedToReplaceAnExistingReservation",
        "code": 66,
        "message": "",
        "docs": [
          "TriedToReplaceAnExistingReservation"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidOperation",
        "code": 67,
        "message": "Invalid operation",
        "docs": [
          "InvalidOperation: Invalid operation"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidOwner",
        "code": 68,
        "message": "Invalid Owner",
        "docs": [
          "InvalidOwner: Invalid Owner"
        ]
      },
      {
        "kind": "errorNode",
        "name": "printingMintSupplyMustBeZeroForConversion",
        "code": 69,
        "message": "Printing mint supply must be zero for conversion",
        "docs": [
          "PrintingMintSupplyMustBeZeroForConversion: Printing mint supply must be zero for conversion"
        ]
      },
      {
        "kind": "errorNode",
        "name": "oneTimeAuthMintSupplyMustBeZeroForConversion",
        "code": 70,
        "message": "One Time Auth mint supply must be zero for conversion",
        "docs": [
          "OneTimeAuthMintSupplyMustBeZeroForConversion: One Time Auth mint supply must be zero for conversion"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidEditionIndex",
        "code": 71,
        "message": "You tried to insert one edition too many into an edition mark pda",
        "docs": [
          "InvalidEditionIndex: You tried to insert one edition too many into an edition mark pda"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationArrayShouldBeSizeOne",
        "code": 72,
        "message": "",
        "docs": [
          "ReservationArrayShouldBeSizeOne"
        ]
      },
      {
        "kind": "errorNode",
        "name": "isMutableCanOnlyBeFlippedToFalse",
        "code": 73,
        "message": "Is Mutable can only be flipped to false",
        "docs": [
          "IsMutableCanOnlyBeFlippedToFalse: Is Mutable can only be flipped to false"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionCannotBeVerifiedInThisInstruction",
        "code": 74,
        "message": "Collection cannot be verified in this instruction",
        "docs": [
          "CollectionCannotBeVerifiedInThisInstruction: Collection cannot be verified in this instruction"
        ]
      },
      {
        "kind": "errorNode",
        "name": "removed",
        "code": 75,
        "message": "This instruction was deprecated in a previous release and is now removed",
        "docs": [
          "Removed: This instruction was deprecated in a previous release and is now removed"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mustBeBurned",
        "code": 76,
        "message": "",
        "docs": [
          "MustBeBurned"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidUseMethod",
        "code": 77,
        "message": "This use method is invalid",
        "docs": [
          "InvalidUseMethod: This use method is invalid"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotChangeUseMethodAfterFirstUse",
        "code": 78,
        "message": "Cannot Change Use Method after the first use",
        "docs": [
          "CannotChangeUseMethodAfterFirstUse: Cannot Change Use Method after the first use"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotChangeUsesAfterFirstUse",
        "code": 79,
        "message": "Cannot Change Remaining or Available uses after the first use",
        "docs": [
          "CannotChangeUsesAfterFirstUse: Cannot Change Remaining or Available uses after the first use"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionNotFound",
        "code": 80,
        "message": "Collection Not Found on Metadata",
        "docs": [
          "CollectionNotFound: Collection Not Found on Metadata"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCollectionUpdateAuthority",
        "code": 81,
        "message": "Collection Update Authority is invalid",
        "docs": [
          "InvalidCollectionUpdateAuthority: Collection Update Authority is invalid"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMustBeAUniqueMasterEdition",
        "code": 82,
        "message": "Collection Must Be a Unique Master Edition v2",
        "docs": [
          "CollectionMustBeAUniqueMasterEdition: Collection Must Be a Unique Master Edition v2"
        ]
      },
      {
        "kind": "errorNode",
        "name": "useAuthorityRecordAlreadyExists",
        "code": 83,
        "message": "The Use Authority Record Already Exists, to modify it Revoke, then Approve",
        "docs": [
          "UseAuthorityRecordAlreadyExists: The Use Authority Record Already Exists, to modify it Revoke, then Approve"
        ]
      },
      {
        "kind": "errorNode",
        "name": "useAuthorityRecordAlreadyRevoked",
        "code": 84,
        "message": "The Use Authority Record is empty or already revoked",
        "docs": [
          "UseAuthorityRecordAlreadyRevoked: The Use Authority Record is empty or already revoked"
        ]
      },
      {
        "kind": "errorNode",
        "name": "unusable",
        "code": 85,
        "message": "This token has no uses",
        "docs": [
          "Unusable: This token has no uses"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notEnoughUses",
        "code": 86,
        "message": "There are not enough Uses left on this token.",
        "docs": [
          "NotEnoughUses: There are not enough Uses left on this token."
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionAuthorityRecordAlreadyExists",
        "code": 87,
        "message": "This Collection Authority Record Already Exists.",
        "docs": [
          "CollectionAuthorityRecordAlreadyExists: This Collection Authority Record Already Exists."
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionAuthorityDoesNotExist",
        "code": 88,
        "message": "This Collection Authority Record Does Not Exist.",
        "docs": [
          "CollectionAuthorityDoesNotExist: This Collection Authority Record Does Not Exist."
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidUseAuthorityRecord",
        "code": 89,
        "message": "This Use Authority Record is invalid.",
        "docs": [
          "InvalidUseAuthorityRecord: This Use Authority Record is invalid."
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCollectionAuthorityRecord",
        "code": 90,
        "message": "",
        "docs": [
          "InvalidCollectionAuthorityRecord"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidFreezeAuthority",
        "code": 91,
        "message": "Metadata does not match the freeze authority on the mint",
        "docs": [
          "InvalidFreezeAuthority: Metadata does not match the freeze authority on the mint"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidDelegate",
        "code": 92,
        "message": "All tokens in this account have not been delegated to this user.",
        "docs": [
          "InvalidDelegate: All tokens in this account have not been delegated to this user."
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotAdjustVerifiedCreator",
        "code": 93,
        "message": "",
        "docs": [
          "CannotAdjustVerifiedCreator"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotRemoveVerifiedCreator",
        "code": 94,
        "message": "Verified creators cannot be removed.",
        "docs": [
          "CannotRemoveVerifiedCreator: Verified creators cannot be removed."
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotWipeVerifiedCreators",
        "code": 95,
        "message": "",
        "docs": [
          "CannotWipeVerifiedCreators"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notAllowedToChangeSellerFeeBasisPoints",
        "code": 96,
        "message": "",
        "docs": [
          "NotAllowedToChangeSellerFeeBasisPoints"
        ]
      },
      {
        "kind": "errorNode",
        "name": "editionOverrideCannotBeZero",
        "code": 97,
        "message": "Edition override cannot be zero",
        "docs": [
          "EditionOverrideCannotBeZero: Edition override cannot be zero"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidUser",
        "code": 98,
        "message": "Invalid User",
        "docs": [
          "InvalidUser: Invalid User"
        ]
      },
      {
        "kind": "errorNode",
        "name": "revokeCollectionAuthoritySignerIncorrect",
        "code": 99,
        "message": "Revoke Collection Authority signer is incorrect",
        "docs": [
          "RevokeCollectionAuthoritySignerIncorrect: Revoke Collection Authority signer is incorrect"
        ]
      },
      {
        "kind": "errorNode",
        "name": "tokenCloseFailed",
        "code": 100,
        "message": "",
        "docs": [
          "TokenCloseFailed"
        ]
      },
      {
        "kind": "errorNode",
        "name": "unsizedCollection",
        "code": 101,
        "message": "Can't use this function on unsized collection",
        "docs": [
          "UnsizedCollection: Can't use this function on unsized collection"
        ]
      },
      {
        "kind": "errorNode",
        "name": "sizedCollection",
        "code": 102,
        "message": "Can't use this function on a sized collection",
        "docs": [
          "SizedCollection: Can't use this function on a sized collection"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingCollectionMetadata",
        "code": 103,
        "message": "Missing collection metadata account",
        "docs": [
          "MissingCollectionMetadata: Missing collection metadata account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notAMemberOfCollection",
        "code": 104,
        "message": "This NFT is not a member of the specified collection.",
        "docs": [
          "NotAMemberOfCollection: This NFT is not a member of the specified collection."
        ]
      },
      {
        "kind": "errorNode",
        "name": "notVerifiedMemberOfCollection",
        "code": 105,
        "message": "This NFT is not a verified member of the specified collection.",
        "docs": [
          "NotVerifiedMemberOfCollection: This NFT is not a verified member of the specified collection."
        ]
      },
      {
        "kind": "errorNode",
        "name": "notACollectionParent",
        "code": 106,
        "message": "This NFT is not a collection parent NFT.",
        "docs": [
          "NotACollectionParent: This NFT is not a collection parent NFT."
        ]
      },
      {
        "kind": "errorNode",
        "name": "couldNotDetermineTokenStandard",
        "code": 107,
        "message": "Could not determine a TokenStandard type.",
        "docs": [
          "CouldNotDetermineTokenStandard: Could not determine a TokenStandard type."
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingEditionAccount",
        "code": 108,
        "message": "This mint account has an edition but none was provided.",
        "docs": [
          "MissingEditionAccount: This mint account has an edition but none was provided."
        ]
      },
      {
        "kind": "errorNode",
        "name": "notAMasterEdition",
        "code": 109,
        "message": "This edition is not a Master Edition",
        "docs": [
          "NotAMasterEdition: This edition is not a Master Edition"
        ]
      },
      {
        "kind": "errorNode",
        "name": "masterEditionHasPrints",
        "code": 110,
        "message": "This Master Edition has existing prints",
        "docs": [
          "MasterEditionHasPrints: This Master Edition has existing prints"
        ]
      },
      {
        "kind": "errorNode",
        "name": "borshDeserializationError",
        "code": 111,
        "message": "",
        "docs": [
          "BorshDeserializationError"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotUpdateVerifiedCollection",
        "code": 112,
        "message": "Cannot update a verified collection in this command",
        "docs": [
          "CannotUpdateVerifiedCollection: Cannot update a verified collection in this command"
        ]
      },
      {
        "kind": "errorNode",
        "name": "collectionMasterEditionAccountInvalid",
        "code": 113,
        "message": "Edition account doesnt match collection ",
        "docs": [
          "CollectionMasterEditionAccountInvalid: Edition account doesnt match collection "
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyVerified",
        "code": 114,
        "message": "Item is already verified.",
        "docs": [
          "AlreadyVerified: Item is already verified."
        ]
      },
      {
        "kind": "errorNode",
        "name": "alreadyUnverified",
        "code": 115,
        "message": "",
        "docs": [
          "AlreadyUnverified"
        ]
      },
      {
        "kind": "errorNode",
        "name": "notAPrintEdition",
        "code": 116,
        "message": "This edition is not a Print Edition",
        "docs": [
          "NotAPrintEdition: This edition is not a Print Edition"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMasterEdition",
        "code": 117,
        "message": "Invalid Master Edition",
        "docs": [
          "InvalidMasterEdition: Invalid Master Edition"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidPrintEdition",
        "code": 118,
        "message": "Invalid Print Edition",
        "docs": [
          "InvalidPrintEdition: Invalid Print Edition"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidEditionMarker",
        "code": 119,
        "message": "Invalid Edition Marker",
        "docs": [
          "InvalidEditionMarker: Invalid Edition Marker"
        ]
      },
      {
        "kind": "errorNode",
        "name": "reservationListDeprecated",
        "code": 120,
        "message": "Reservation List is Deprecated",
        "docs": [
          "ReservationListDeprecated: Reservation List is Deprecated"
        ]
      },
      {
        "kind": "errorNode",
        "name": "printEditionDoesNotMatchMasterEdition",
        "code": 121,
        "message": "Print Edition does not match Master Edition",
        "docs": [
          "PrintEditionDoesNotMatchMasterEdition: Print Edition does not match Master Edition"
        ]
      },
      {
        "kind": "errorNode",
        "name": "editionNumberGreaterThanMaxSupply",
        "code": 122,
        "message": "Edition Number greater than max supply",
        "docs": [
          "EditionNumberGreaterThanMaxSupply: Edition Number greater than max supply"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mustUnverify",
        "code": 123,
        "message": "Must unverify before migrating collections.",
        "docs": [
          "MustUnverify: Must unverify before migrating collections."
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidEscrowBumpSeed",
        "code": 124,
        "message": "Invalid Escrow Account Bump Seed",
        "docs": [
          "InvalidEscrowBumpSeed: Invalid Escrow Account Bump Seed"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mustBeEscrowAuthority",
        "code": 125,
        "message": "Must Escrow Authority",
        "docs": [
          "MustBeEscrowAuthority: Must Escrow Authority"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidSystemProgram",
        "code": 126,
        "message": "Invalid System Program",
        "docs": [
          "InvalidSystemProgram: Invalid System Program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mustBeNonFungible",
        "code": 127,
        "message": "Must be a Non Fungible Token",
        "docs": [
          "MustBeNonFungible: Must be a Non Fungible Token"
        ]
      },
      {
        "kind": "errorNode",
        "name": "insufficientTokens",
        "code": 128,
        "message": "Insufficient tokens for transfer",
        "docs": [
          "InsufficientTokens: Insufficient tokens for transfer"
        ]
      },
      {
        "kind": "errorNode",
        "name": "borshSerializationError",
        "code": 129,
        "message": "Borsh Serialization Error",
        "docs": [
          "BorshSerializationError: Borsh Serialization Error"
        ]
      },
      {
        "kind": "errorNode",
        "name": "noFreezeAuthoritySet",
        "code": 130,
        "message": "Cannot create NFT with no Freeze Authority.",
        "docs": [
          "NoFreezeAuthoritySet: Cannot create NFT with no Freeze Authority."
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCollectionSizeChange",
        "code": 131,
        "message": "Invalid collection size change",
        "docs": [
          "InvalidCollectionSizeChange: Invalid collection size change"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidBubblegumSigner",
        "code": 132,
        "message": "Invalid bubblegum signer",
        "docs": [
          "InvalidBubblegumSigner: Invalid bubblegum signer"
        ]
      },
      {
        "kind": "errorNode",
        "name": "escrowParentHasDelegate",
        "code": 133,
        "message": "Escrow parent cannot have a delegate",
        "docs": [
          "EscrowParentHasDelegate: Escrow parent cannot have a delegate"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mintIsNotSigner",
        "code": 134,
        "message": "Mint needs to be signer to initialize the account",
        "docs": [
          "MintIsNotSigner: Mint needs to be signer to initialize the account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidTokenStandard",
        "code": 135,
        "message": "Invalid token standard",
        "docs": [
          "InvalidTokenStandard: Invalid token standard"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMintForTokenStandard",
        "code": 136,
        "message": "Invalid mint account for specified token standard",
        "docs": [
          "InvalidMintForTokenStandard: Invalid mint account for specified token standard"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidAuthorizationRules",
        "code": 137,
        "message": "Invalid authorization rules account",
        "docs": [
          "InvalidAuthorizationRules: Invalid authorization rules account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingAuthorizationRules",
        "code": 138,
        "message": "Missing authorization rules account",
        "docs": [
          "MissingAuthorizationRules: Missing authorization rules account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingProgrammableConfig",
        "code": 139,
        "message": "Missing programmable configuration",
        "docs": [
          "MissingProgrammableConfig: Missing programmable configuration"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidProgrammableConfig",
        "code": 140,
        "message": "Invalid programmable configuration",
        "docs": [
          "InvalidProgrammableConfig: Invalid programmable configuration"
        ]
      },
      {
        "kind": "errorNode",
        "name": "delegateAlreadyExists",
        "code": 141,
        "message": "Delegate already exists",
        "docs": [
          "DelegateAlreadyExists: Delegate already exists"
        ]
      },
      {
        "kind": "errorNode",
        "name": "delegateNotFound",
        "code": 142,
        "message": "Delegate not found",
        "docs": [
          "DelegateNotFound: Delegate not found"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingAccountInBuilder",
        "code": 143,
        "message": "Required account not set in instruction builder",
        "docs": [
          "MissingAccountInBuilder: Required account not set in instruction builder"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingArgumentInBuilder",
        "code": 144,
        "message": "Required argument not set in instruction builder",
        "docs": [
          "MissingArgumentInBuilder: Required argument not set in instruction builder"
        ]
      },
      {
        "kind": "errorNode",
        "name": "featureNotSupported",
        "code": 145,
        "message": "Feature not supported currently",
        "docs": [
          "FeatureNotSupported: Feature not supported currently"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidSystemWallet",
        "code": 146,
        "message": "Invalid system wallet",
        "docs": [
          "InvalidSystemWallet: Invalid system wallet"
        ]
      },
      {
        "kind": "errorNode",
        "name": "onlySaleDelegateCanTransfer",
        "code": 147,
        "message": "Only the sale delegate can transfer while its set",
        "docs": [
          "OnlySaleDelegateCanTransfer: Only the sale delegate can transfer while its set"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingTokenAccount",
        "code": 148,
        "message": "Missing token account",
        "docs": [
          "MissingTokenAccount: Missing token account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingSplTokenProgram",
        "code": 149,
        "message": "Missing SPL token program",
        "docs": [
          "MissingSplTokenProgram: Missing SPL token program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingAuthorizationRulesProgram",
        "code": 150,
        "message": "Missing authorization rules program",
        "docs": [
          "MissingAuthorizationRulesProgram: Missing authorization rules program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidDelegateRoleForTransfer",
        "code": 151,
        "message": "Invalid delegate role for transfer",
        "docs": [
          "InvalidDelegateRoleForTransfer: Invalid delegate role for transfer"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidTransferAuthority",
        "code": 152,
        "message": "Invalid transfer authority",
        "docs": [
          "InvalidTransferAuthority: Invalid transfer authority"
        ]
      },
      {
        "kind": "errorNode",
        "name": "instructionNotSupported",
        "code": 153,
        "message": "Instruction not supported for ProgrammableNonFungible assets",
        "docs": [
          "InstructionNotSupported: Instruction not supported for ProgrammableNonFungible assets"
        ]
      },
      {
        "kind": "errorNode",
        "name": "keyMismatch",
        "code": 154,
        "message": "Public key does not match expected value",
        "docs": [
          "KeyMismatch: Public key does not match expected value"
        ]
      },
      {
        "kind": "errorNode",
        "name": "lockedToken",
        "code": 155,
        "message": "Token is locked",
        "docs": [
          "LockedToken: Token is locked"
        ]
      },
      {
        "kind": "errorNode",
        "name": "unlockedToken",
        "code": 156,
        "message": "Token is unlocked",
        "docs": [
          "UnlockedToken: Token is unlocked"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingDelegateRole",
        "code": 157,
        "message": "Missing delegate role",
        "docs": [
          "MissingDelegateRole: Missing delegate role"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidAuthorityType",
        "code": 158,
        "message": "Invalid authority type",
        "docs": [
          "InvalidAuthorityType: Invalid authority type"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingTokenRecord",
        "code": 159,
        "message": "Missing token record account",
        "docs": [
          "MissingTokenRecord: Missing token record account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "mintSupplyMustBeZero",
        "code": 160,
        "message": "Mint supply must be zero for programmable assets",
        "docs": [
          "MintSupplyMustBeZero: Mint supply must be zero for programmable assets"
        ]
      },
      {
        "kind": "errorNode",
        "name": "dataIsEmptyOrZeroed",
        "code": 161,
        "message": "Data is empty or zeroed",
        "docs": [
          "DataIsEmptyOrZeroed: Data is empty or zeroed"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingTokenOwnerAccount",
        "code": 162,
        "message": "Missing token owner",
        "docs": [
          "MissingTokenOwnerAccount: Missing token owner"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMasterEditionAccountLength",
        "code": 163,
        "message": "Master edition account has an invalid length",
        "docs": [
          "InvalidMasterEditionAccountLength: Master edition account has an invalid length"
        ]
      },
      {
        "kind": "errorNode",
        "name": "incorrectTokenState",
        "code": 164,
        "message": "Incorrect token state",
        "docs": [
          "IncorrectTokenState: Incorrect token state"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidDelegateRole",
        "code": 165,
        "message": "Invalid delegate role",
        "docs": [
          "InvalidDelegateRole: Invalid delegate role"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingPrintSupply",
        "code": 166,
        "message": "Print supply is required for non-fungibles",
        "docs": [
          "MissingPrintSupply: Print supply is required for non-fungibles"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingMasterEditionAccount",
        "code": 167,
        "message": "Missing master edition account",
        "docs": [
          "MissingMasterEditionAccount: Missing master edition account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "amountMustBeGreaterThanZero",
        "code": 168,
        "message": "Amount must be greater than zero",
        "docs": [
          "AmountMustBeGreaterThanZero: Amount must be greater than zero"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidDelegateArgs",
        "code": 169,
        "message": "Invalid delegate args",
        "docs": [
          "InvalidDelegateArgs: Invalid delegate args"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingLockedTransferAddress",
        "code": 170,
        "message": "Missing address for locked transfer",
        "docs": [
          "MissingLockedTransferAddress: Missing address for locked transfer"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidLockedTransferAddress",
        "code": 171,
        "message": "Invalid destination address for locked transfer",
        "docs": [
          "InvalidLockedTransferAddress: Invalid destination address for locked transfer"
        ]
      },
      {
        "kind": "errorNode",
        "name": "dataIncrementLimitExceeded",
        "code": 172,
        "message": "Exceeded account realloc increase limit",
        "docs": [
          "DataIncrementLimitExceeded: Exceeded account realloc increase limit"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotUpdateAssetWithDelegate",
        "code": 173,
        "message": "Cannot update the rule set of a programmable asset that has a delegate",
        "docs": [
          "CannotUpdateAssetWithDelegate: Cannot update the rule set of a programmable asset that has a delegate"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidAmount",
        "code": 174,
        "message": "Invalid token amount for this operation or token standard",
        "docs": [
          "InvalidAmount: Invalid token amount for this operation or token standard"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingMasterEditionMintAccount",
        "code": 175,
        "message": "Missing master edition mint account",
        "docs": [
          "MissingMasterEditionMintAccount: Missing master edition mint account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingMasterEditionTokenAccount",
        "code": 176,
        "message": "Missing master edition token account",
        "docs": [
          "MissingMasterEditionTokenAccount: Missing master edition token account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingEditionMarkerAccount",
        "code": 177,
        "message": "Missing edition marker account",
        "docs": [
          "MissingEditionMarkerAccount: Missing edition marker account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotBurnWithDelegate",
        "code": 178,
        "message": "Cannot burn while persistent delegate is set",
        "docs": [
          "CannotBurnWithDelegate: Cannot burn while persistent delegate is set"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingEdition",
        "code": 179,
        "message": "Missing edition account",
        "docs": [
          "MissingEdition: Missing edition account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidAssociatedTokenAccountProgram",
        "code": 180,
        "message": "Invalid Associated Token Account Program",
        "docs": [
          "InvalidAssociatedTokenAccountProgram: Invalid Associated Token Account Program"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidInstructionsSysvar",
        "code": 181,
        "message": "Invalid InstructionsSysvar",
        "docs": [
          "InvalidInstructionsSysvar: Invalid InstructionsSysvar"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidParentAccounts",
        "code": 182,
        "message": "Invalid or Unneeded parent accounts",
        "docs": [
          "InvalidParentAccounts: Invalid or Unneeded parent accounts"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidUpdateArgs",
        "code": 183,
        "message": "Authority cannot apply all update args",
        "docs": [
          "InvalidUpdateArgs: Authority cannot apply all update args"
        ]
      },
      {
        "kind": "errorNode",
        "name": "insufficientTokenBalance",
        "code": 184,
        "message": "Token account does not have enough tokens",
        "docs": [
          "InsufficientTokenBalance: Token account does not have enough tokens"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingCollectionMint",
        "code": 185,
        "message": "Missing collection account",
        "docs": [
          "MissingCollectionMint: Missing collection account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingCollectionMasterEdition",
        "code": 186,
        "message": "Missing collection master edition account",
        "docs": [
          "MissingCollectionMasterEdition: Missing collection master edition account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidTokenRecord",
        "code": 187,
        "message": "Invalid token record account",
        "docs": [
          "InvalidTokenRecord: Invalid token record account"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidCloseAuthority",
        "code": 188,
        "message": "The close authority needs to be revoked by the Utility Delegate",
        "docs": [
          "InvalidCloseAuthority: The close authority needs to be revoked by the Utility Delegate"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidInstruction",
        "code": 189,
        "message": "Invalid or removed instruction",
        "docs": [
          "InvalidInstruction: Invalid or removed instruction"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingDelegateRecord",
        "code": 190,
        "message": "Missing delegate record",
        "docs": [
          "MissingDelegateRecord: Missing delegate record"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidFeeAccount",
        "code": 191,
        "message": "",
        "docs": [
          "InvalidFeeAccount"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMetadataFlags",
        "code": 192,
        "message": "",
        "docs": [
          "InvalidMetadataFlags"
        ]
      },
      {
        "kind": "errorNode",
        "name": "cannotChangeUpdateAuthorityWithDelegate",
        "code": 193,
        "message": "Cannot change the update authority with a delegate",
        "docs": [
          "CannotChangeUpdateAuthorityWithDelegate: Cannot change the update authority with a delegate"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMintExtensionType",
        "code": 194,
        "message": "Invalid mint extension type",
        "docs": [
          "InvalidMintExtensionType: Invalid mint extension type"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMintCloseAuthority",
        "code": 195,
        "message": "Invalid mint close authority",
        "docs": [
          "InvalidMintCloseAuthority: Invalid mint close authority"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidMetadataPointer",
        "code": 196,
        "message": "Invalid metadata pointer",
        "docs": [
          "InvalidMetadataPointer: Invalid metadata pointer"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidTokenExtensionType",
        "code": 197,
        "message": "Invalid token extension type",
        "docs": [
          "InvalidTokenExtensionType: Invalid token extension type"
        ]
      },
      {
        "kind": "errorNode",
        "name": "missingImmutableOwnerExtension",
        "code": 198,
        "message": "Missing immutable owner extension",
        "docs": [
          "MissingImmutableOwnerExtension: Missing immutable owner extension"
        ]
      },
      {
        "kind": "errorNode",
        "name": "expectedUninitializedAccount",
        "code": 199,
        "message": "Expected account to be uninitialized",
        "docs": [
          "ExpectedUninitializedAccount: Expected account to be uninitialized"
        ]
      },
      {
        "kind": "errorNode",
        "name": "invalidEditionAccountLength",
        "code": 200,
        "message": "Edition account has an invalid length",
        "docs": [
          "InvalidEditionAccountLength: Edition account has an invalid length"
        ]
      },
      {
        "kind": "errorNode",
        "name": "accountAlreadyResized",
        "code": 201,
        "message": "Account has already been resized",
        "docs": [
          "AccountAlreadyResized: Account has already been resized"
        ]
      },
      {
        "kind": "errorNode",
        "name": "conditionsForClosingNotMet",
        "code": 202,
        "message": "Conditions for closing not met",
        "docs": [
          "ConditionsForClosingNotMet: Conditions for closing not met"
        ]
      }
    ]
  },
  "additionalPrograms": []
}